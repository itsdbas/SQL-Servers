######################################################

function Get-Dport {
    [CmdletBinding()]
    param (
        [Parameter(Position=0, Mandatory=$true)]
        [ValidateNotNullOrEmpty()]
        [string]$targetServer
    )

    # Load SQL Server module if needed
    Import-Module SqlServer -ErrorAction SilentlyContinue

    # Establish connection to the SQL Server
    try {
        $connectionString = "Server=$targetServer;Database=master;Integrated Security=True;"
        $sqlConnection = New-Object System.Data.SqlClient.SqlConnection
        $sqlConnection.ConnectionString = $connectionString
        $sqlConnection.Open()
    }
    catch {
        Write-Error "Failed to establish connection to the SQL Server: $_"
        return
    }

    # SQL query to retrieve server port info
    $sqlQuery = @"
    SELECT DISTINCT local_net_address, local_tcp_port 
    FROM sys.dm_exec_connections 
    WHERE local_net_address IS NOT NULL;
"@

    # Execute the SQL query
    try {
        $command = $sqlConnection.CreateCommand()
        $command.CommandText = $sqlQuery
        $adapter = New-Object System.Data.SqlClient.SqlDataAdapter $command
        $dataSet = New-Object System.Data.DataSet
        $adapter.Fill($dataSet) | Out-Null
    }
    catch {
        Write-Error "Failed to execute SQL query: $_"
        return
    }
    finally {
        $sqlConnection.Close()
    }

    # Display the results
    if ($dataSet.Tables.Count -gt 0 -and $dataSet.Tables[0].Rows.Count -gt 0) {
        $dataSet.Tables[0] | Select-Object local_net_address, local_tcp_port | Format-Table -AutoSize
    }
    else {
        Write-Host "`nCRITICAL: $targetServer - SQL Server Default PORT not open or no data returned..."
    }
}


######################################################




#Get-Dport

#Get the status of each SQL service
Write-Host "`n##############  SQL Server Default Port Status:  ############" -BackgroundColor Black -ForegroundColor Green
Write-Host " "
ForEach ($targetServer in $targetServerList) { Get-Dport -targetServer $targetServer }

